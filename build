#!/bin/bash
cd /tmp/rom # Depends on where source got synced
. /tmp/ci/function && check_build_type

# Normal build steps
. build/envsetup.sh
lunch $lunch_device
case "$build_type" in
		 R|r)
		 export _JAVA_OPTIONS="-Xmx10g"
esac
export CCACHE_DIR=/tmp/ccache
export CCACHE_EXEC=$(which ccache)
export USE_CCACHE=1
ccache -M 15G
ccache -o compression=true
ccache -z

# check how much time sync took
sync_time

# compile plox
case "$build_type" in
		 V|v) # Lets Make Vendor / System
		 SECONDS=0
		 make vendorimage -j$(nproc --all)
		 vendor_time=$(($SECONDS / 60))
		 sleeps=$((115 - ($vendor_time + $sync_time)))m
		 make systemimage -j$(nproc --all) &
		 sleep $sleeps
		 kill %1
		 ;;
		 S|s) # Lets Make System
		 sleeps=$((115 - $sync_time))m
		 make systemimage -j$(nproc --all) &
		 sleep $sleeps
		 kill %1
		 ;;
		 R|r) # Lets Make Full Rom
		 bash /tmp/ci/build.sh
esac

if [ -e out/target/product/$device_codename/system.img ]; then
echo "R" > /tmp/build_type.txt
else
echo "S" > /tmp/build_type.txt
fi

cd out/target/product/$device_codename/
ls *2022*zip && upload *2022*zip

if [ ! -e /tmp/rom/out/target/product/*/*2022*.zip ]; then

tg "Stop Compiling $build_type To Collect Cache
Status: $progress"

fi

ccache -s # Let's print ccache statistics finally
